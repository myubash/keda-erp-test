1. Buatlah fungsi dengan input array of number untuk mengurutkan angka dari terbesar ke terkecil dengan manual tanpa fungsi bawaan javascript
Input : [1, 2, 4, 3, 5, 3, 2, 1]			Expected Output : [5, 4, 3, 3, 2, 2, 1, 1]

const sortFn = (num) => {
  const length = num.length;
  for (let i = 0; i < length - 1; i++) {
    for (let j = 0; j < length - 1 - i; j++) {
      if (num[j] < num[j + 1]) {
        const temp = num[j];
        num[j] = num[j + 1];
        num[j + 1] = temp;
      }
    }
  }
  return num;
}
 
const inputQ1 = [1, 2, 4, 3, 5, 3, 2, 1];
console.log(sortFn(inputQ1));
 
2. Buatlah fungsi dengan input array of number dan number untuk menemukan jumlah maksimum subarray dengan panjang angka yang dimasukan ke fungsi
Input : ([100, 200, 300, 400], 2)				Expected Output : 700 		// didapatkan dari 300 + 400
Input : ([1, 4, 2, 10, 23, 3, 1, 0, 20], 4)		Expected Output : 39 		// didapatkan dari 4 + 2 + 10 + 23
Input : ([-3, 4, 0, -2, 6, -1], 2)				Expected Output : 5 		// didapatkan dari 6 + -1

const sumMax = (arr, num) => {
  if (num > arr.length) {
    return null;
  }
 
  let max = 0;
  let temp = 0;
 
  for (let i = 0; i < num; i++) {
    max += arr[i];
  }
  temp = max;
 
  for (let i = num; i < arr.length; i++) {
    temp = temp - arr[i - num] + arr[i];
    max = Math.max(max, temp);
  }
 
  return max;
}

const resultQ2_1 = sumMax([100, 200, 300, 400], 2)
console.log(resultQ2_1)

const resultQ2_2 = sumMax([1, 4, 2, 10, 23, 3, 1, 0, 20], 4)
console.log(resultQ2_2)

const resultQ2_3 = sumMax([-3, 4, 0, -2, 6, -1], 2)
console.log(resultQ2_3)
 
3. Buatlah fungsi untuk mendapatkan jumlah semua bilangan genap dalam nested objek
Input :
{
  outer: 2,
  obj: {
    inner: 2,
    otherObj: {
      superInner: 2,
      notANumber: true,
      alsoNotANumber: "yup"
    }
  }
}
Output: 6
 
Input:
{
  a: 2,
  b: {b: 2, bb: {b: 3, bb: {b: 2}}},
  c: {c: {c: 2}, cc: 'ball', ccc: 5},
  d: 1,
  e: {e: {e: 4}, ee: 'car'}
};
Output: 12

const nestedSum = (obj) => {
  let sum = 0;
 
  for (const key in obj) {
    if (typeof obj[key] === 'object') {
      sum += nestedSum(obj[key]);
    } else if (typeof obj[key] === 'number' && obj[key] % 2 === 0) {
      sum += obj[key];
    }
  }
 
  return sum;
}

const inputQ3_1 = {
  outer: 2,
  obj: {
    inner: 2,
    otherObj: {
      superInner: 2,
      notANumber: true,
      alsoNotANumber: "yup"
    }
  }
}

const resultQ3_1 = nestedSum(inputQ3_1);
console.log(resultQ3_1);

const inputQ3_2 = {
  a: 2,
  b: {b: 2, bb: {b: 3, bb: {b: 2}}},
  c: {c: {c: 2}, cc: 'ball', ccc: 5},
  d: 1,
  e: {e: {e: 4}, ee: 'car'}
}

const resultQ3_2 = nestedSum(inputQ3_2);
console.log(resultQ3_2);